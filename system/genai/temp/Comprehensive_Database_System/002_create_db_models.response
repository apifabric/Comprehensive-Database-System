{
    "models": [
        {
            "classname": "User",
            "code": "class User(Base):\n    __tablename__ = \"user\"\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    name = Column(String)\n    email = Column(String)\n    created_at = Column(DateTime, default=datetime.datetime.utcnow)\n    profile_id = Column(Integer, ForeignKey('profile.id'))",
            "description": "Represents a system user.",
            "name": "User"
        },
        {
            "classname": "Profile",
            "code": "class Profile(Base):\n    __tablename__ = \"profile\"\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    bio = Column(String)\n    date_of_birth = Column(Date)\n    user_id = Column(Integer, ForeignKey('user.id'))",
            "description": "Stores additional info about the user.",
            "name": "Profile"
        },
        {
            "classname": "Role",
            "code": "class Role(Base):\n    __tablename__ = \"role\"\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    name = Column(String)\n    description = Column(String)",
            "description": "Defines different roles within the system.",
            "name": "Role"
        },
        {
            "classname": "UserRole",
            "code": "class UserRole(Base):\n    __tablename__ = \"user_role\"\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    user_id = Column(Integer, ForeignKey('user.id'))\n    role_id = Column(Integer, ForeignKey('role.id'))",
            "description": "Associative table connecting users with roles.",
            "name": "UserRole"
        },
        {
            "classname": "Asset",
            "code": "class Asset(Base):\n    __tablename__ = \"asset\"\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    name = Column(String)\n    description = Column(String)\n    owner_id = Column(Integer, ForeignKey('user.id'))",
            "description": "Represents assets owned by users.",
            "name": "Asset"
        },
        {
            "classname": "AuditLog",
            "code": "class AuditLog(Base):\n    __tablename__ = \"audit_log\"\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    action = Column(String)\n    user_id = Column(Integer, ForeignKey('user.id'))\n    timestamp = Column(DateTime, default=datetime.datetime.utcnow)",
            "description": "Keeps track of user activities.",
            "name": "AuditLog"
        },
        {
            "classname": "Configuration",
            "code": "class Configuration(Base):\n    __tablename__ = \"configuration\"\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    key = Column(String)\n    value = Column(String)",
            "description": "Stores various system configuration settings.",
            "name": "Configuration"
        },
        {
            "classname": "Task",
            "code": "class Task(Base):\n    __tablename__ = \"task\"\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    title = Column(String)\n    description = Column(String)\n    assigned_to_id = Column(Integer, ForeignKey('user.id'))\n    status = Column(String)",
            "description": "Represents tasks assigned to users.",
            "name": "Task"
        },
        {
            "classname": "Team",
            "code": "class Team(Base):\n    __tablename__ = \"team\"\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    name = Column(String)\n    description = Column(String)",
            "description": "Represents a team within the system.",
            "name": "Team"
        },
        {
            "classname": "UserTeam",
            "code": "class UserTeam(Base):\n    __tablename__ = \"user_team\"\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    user_id = Column(Integer, ForeignKey('user.id'))\n    team_id = Column(Integer, ForeignKey('team.id'))",
            "description": "Associative table connecting users with teams.",
            "name": "UserTeam"
        },
        {
            "classname": "Department",
            "code": "class Department(Base):\n    __tablename__ = \"department\"\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    name = Column(String)\n    head_id = Column(Integer, ForeignKey('user.id'))",
            "description": "Defines departments within the company.",
            "name": "Department"
        },
        {
            "classname": "Project",
            "code": "class Project(Base):\n    __tablename__ = \"project\"\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    name = Column(String)\n    description = Column(String)\n    lead_id = Column(Integer, ForeignKey('user.id'))",
            "description": "Represents projects within the organization.",
            "name": "Project"
        }
    ],
    "rules": [],
    "test_data": "",
    "test_data_rows": [
        {
            "test_data_row_variable": "user1",
            "code": "user1 = User(name=\"John Doe\", email=\"john.doe@example.com\", created_at=datetime.datetime(2021, 1, 1), profile_id=1)"
        },
        {
            "test_data_row_variable": "user2",
            "code": "user2 = User(name=\"Jane Smith\", email=\"jane.smith@example.com\", created_at=datetime.datetime(2021, 2, 15), profile_id=2)"
        },
        {
            "test_data_row_variable": "user3",
            "code": "user3 = User(name=\"Alice Jones\", email=\"alice.jones@example.com\", created_at=datetime.datetime(2021, 3, 30), profile_id=3)"
        },
        {
            "test_data_row_variable": "user4",
            "code": "user4 = User(name=\"Bob Brown\", email=\"bob.brown@example.com\", created_at=datetime.datetime(2021, 4, 20), profile_id=4)"
        }
    ],
    "test_data_sqlite": "",
    "name": "Comprehensive_Database_System"
}