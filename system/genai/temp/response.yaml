"models":
- "classname": |-
    User
  "code": |-
    class User(Base):
        __tablename__ = "user"
        id = Column(Integer, primary_key=True, autoincrement=True)
        name = Column(String)
        email = Column(String)
        created_at = Column(DateTime, default=datetime.datetime.utcnow)
        profile_id = Column(Integer, ForeignKey('profile.id'))
  "description": |-
    Represents a system user.
  "name": |-
    User
- "classname": |-
    Profile
  "code": |-
    class Profile(Base):
        __tablename__ = "profile"
        id = Column(Integer, primary_key=True, autoincrement=True)
        bio = Column(String)
        date_of_birth = Column(Date)
        user_id = Column(Integer, ForeignKey('user.id'))
  "description": |-
    Stores additional info about the user.
  "name": |-
    Profile
- "classname": |-
    Role
  "code": |-
    class Role(Base):
        __tablename__ = "role"
        id = Column(Integer, primary_key=True, autoincrement=True)
        name = Column(String)
        description = Column(String)
  "description": |-
    Defines different roles within the system.
  "name": |-
    Role
- "classname": |-
    UserRole
  "code": |-
    class UserRole(Base):
        __tablename__ = "user_role"
        id = Column(Integer, primary_key=True, autoincrement=True)
        user_id = Column(Integer, ForeignKey('user.id'))
        role_id = Column(Integer, ForeignKey('role.id'))
  "description": |-
    Associative table connecting users with roles.
  "name": |-
    UserRole
- "classname": |-
    Asset
  "code": |-
    class Asset(Base):
        __tablename__ = "asset"
        id = Column(Integer, primary_key=True, autoincrement=True)
        name = Column(String)
        description = Column(String)
        owner_id = Column(Integer, ForeignKey('user.id'))
  "description": |-
    Represents assets owned by users.
  "name": |-
    Asset
- "classname": |-
    AuditLog
  "code": |-
    class AuditLog(Base):
        __tablename__ = "audit_log"
        id = Column(Integer, primary_key=True, autoincrement=True)
        action = Column(String)
        user_id = Column(Integer, ForeignKey('user.id'))
        timestamp = Column(DateTime, default=datetime.datetime.utcnow)
  "description": |-
    Keeps track of user activities.
  "name": |-
    AuditLog
- "classname": |-
    Configuration
  "code": |-
    class Configuration(Base):
        __tablename__ = "configuration"
        id = Column(Integer, primary_key=True, autoincrement=True)
        key = Column(String)
        value = Column(String)
  "description": |-
    Stores various system configuration settings.
  "name": |-
    Configuration
- "classname": |-
    Task
  "code": |-
    class Task(Base):
        __tablename__ = "task"
        id = Column(Integer, primary_key=True, autoincrement=True)
        title = Column(String)
        description = Column(String)
        assigned_to_id = Column(Integer, ForeignKey('user.id'))
        status = Column(String)
  "description": |-
    Represents tasks assigned to users.
  "name": |-
    Task
- "classname": |-
    Team
  "code": |-
    class Team(Base):
        __tablename__ = "team"
        id = Column(Integer, primary_key=True, autoincrement=True)
        name = Column(String)
        description = Column(String)
  "description": |-
    Represents a team within the system.
  "name": |-
    Team
- "classname": |-
    UserTeam
  "code": |-
    class UserTeam(Base):
        __tablename__ = "user_team"
        id = Column(Integer, primary_key=True, autoincrement=True)
        user_id = Column(Integer, ForeignKey('user.id'))
        team_id = Column(Integer, ForeignKey('team.id'))
  "description": |-
    Associative table connecting users with teams.
  "name": |-
    UserTeam
- "classname": |-
    Department
  "code": |-
    class Department(Base):
        __tablename__ = "department"
        id = Column(Integer, primary_key=True, autoincrement=True)
        name = Column(String)
        head_id = Column(Integer, ForeignKey('user.id'))
  "description": |-
    Defines departments within the company.
  "name": |-
    Department
- "classname": |-
    Project
  "code": |-
    class Project(Base):
        __tablename__ = "project"
        id = Column(Integer, primary_key=True, autoincrement=True)
        name = Column(String)
        description = Column(String)
        lead_id = Column(Integer, ForeignKey('user.id'))
  "description": |-
    Represents projects within the organization.
  "name": |-
    Project
"name": |-
  Comprehensive Database System
"rules": []
"test_data": ""
"test_data_rows":
- "code": |-
    user1 = User(name="John Doe", email="john.doe@example.com", created_at=datetime.datetime(2021, 1, 1), profile_id=1)
  "test_data_row_variable": |-
    user1
- "code": |-
    user2 = User(name="Jane Smith", email="jane.smith@example.com", created_at=datetime.datetime(2021, 2, 15), profile_id=2)
  "test_data_row_variable": |-
    user2
- "code": |-
    user3 = User(name="Alice Jones", email="alice.jones@example.com", created_at=datetime.datetime(2021, 3, 30), profile_id=3)
  "test_data_row_variable": |-
    user3
- "code": |-
    user4 = User(name="Bob Brown", email="bob.brown@example.com", created_at=datetime.datetime(2021, 4, 20), profile_id=4)
  "test_data_row_variable": |-
    user4
"test_data_sqlite": ""
